{{- if eq .Values.global.minioLocation "on-cluster" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drycc-minio
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: drycc-minio
  template:
    metadata:
      labels:
        app: drycc-minio
    spec:
      {{- include "common.affinities.pods.soft" (dict "key" "app" "values" (list "drycc-minio")) | indent 6 }}
      serviceAccount: drycc-minio
      containers:
        - name: drycc-minio
          image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/minio:{{.Values.imageTag}}
          imagePullPolicy: {{.Values.imagePullPolicy}}
          env:
            - name: STORAGE
              value: "{{.Values.global.storage}}"
            - name: HEALTH_SERVER_PORT
              value: "8082"
          ports:
            - containerPort: 9000
            - containerPort: 8082
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8082
            initialDelaySeconds: 30
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8082
            initialDelaySeconds: 30
            timeoutSeconds: 1
          args:
            - "server"
            - "/data"
            - "--console-address"
            - ":9001"
          volumeMounts:
            - name: minio-creds
              mountPath: /var/run/secrets/drycc/minio/creds
          {{- if .Values.persistence.enabled }}
            - name: minio-data
              mountPath: /data
          {{- end }}
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      volumes:
        - name: minio-creds
          secret:
            secretName: minio-creds
        {{- if .Values.persistence.enabled }}
        - name: minio-data
          persistentVolumeClaim:
            claimName: drycc-minio
        {{- end }}
{{- end }}
